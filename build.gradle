buildscript {
  configurations.classpath {
    resolutionStrategy {
      //This is required by 'git-publish' version '2.1.3':
      force 'org.eclipse.jgit:org.eclipse.jgit:5.5.1.201910021850-r'
    }
  }
}

plugins {
    id 'java'
    id 'com.diffplug.spotless' version '5.1.1'
    id 'org.ajoberstar.git-publish' version '2.1.3'
}

wrapper {
    gradleVersion = '5.6.4'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

spotless {
  java {
    importOrder 'java', 'javax', 'org', 'com', ''
    removeUnusedImports()

    // available versions are: https://github.com/diffplug/spotless/tree/master/lib-extra/src/main/resources/com/diffplug/spotless/extra/eclipse_jdt_formatter
    eclipse('4.13.0').configFile('.settings/org.eclipse.jdt.core.prefs')
  }
}

task writeFile {
    doLast {
        File fileTxt = file('build/folder/file.txt')
        fileTxt.getParentFile().mkdirs()
        fileTxt.write "Test " + System.currentTimeMillis() + "\n"
    }
}

gitPublish {
    repoUri = 'git@github.com:' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
    branch = 'tmp'

    contents {
        from "${file('build/folder')}"
    }

    preserve {
        include '.nojekyll'
        exclude '.DS_Store'
    }

    commitMessage = "Update the 'tmp' branch."
}

model {
    tasks.build {
        dependsOn project.tasks.gitPublishPush
    }
    tasks.gitPublishReset {
        dependsOn project.tasks.writeFile
    }
}
